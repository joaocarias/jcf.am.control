// <auto-generated />
using System;
using Jcf.AM.Control.Api.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jcf.AM.Control.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Jcf.AM.Control.Api.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserCreateId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserUpdateId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserCreateId");

                    b.HasIndex("UserUpdateId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08dbd59a-2683-4c67-8e16-689ba2648545"),
                            CreateAt = new DateTime(2025, 5, 4, 22, 11, 22, 189, DateTimeKind.Local).AddTicks(3950),
                            Email = "admin@email.com",
                            IsActive = true,
                            Login = "admin@email.com",
                            Name = "Administrador Usuário",
                            Password = "670F8574BD93DD78BD568DAB84C6733A",
                            Role = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("08dbdc08-56e1-4e90-805f-db29361e075e"),
                            CreateAt = new DateTime(2025, 5, 4, 22, 11, 22, 229, DateTimeKind.Local).AddTicks(4247),
                            Email = "basico@email.com",
                            IsActive = true,
                            Login = "basico@email.com",
                            Name = "Básico Usuário",
                            Password = "670F8574BD93DD78BD568DAB84C6733A",
                            Role = "BASIC"
                        });
                });

            modelBuilder.Entity("Jcf.AM.Control.Api.Models.Entities.User", b =>
                {
                    b.HasOne("Jcf.AM.Control.Api.Models.Entities.User", "UserCreate")
                        .WithMany()
                        .HasForeignKey("UserCreateId");

                    b.HasOne("Jcf.AM.Control.Api.Models.Entities.User", "UserUpdate")
                        .WithMany()
                        .HasForeignKey("UserUpdateId");

                    b.Navigation("UserCreate");

                    b.Navigation("UserUpdate");
                });
#pragma warning restore 612, 618
        }
    }
}
